<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <!-- Abstract type for defining arguments with a required name attribute -->
    <xs:complexType name="argumentType" abstract="true" mixed="true">
        <!-- Name attribute is mandatory -->
        <xs:attribute name="name" use="required" />
    </xs:complexType>

    <!-- Defines a collection of arguments -->
    <xs:complexType name="argumentsType">
        <xs:sequence>
            <xs:element name="argument" type="argumentType" minOccurs="1" maxOccurs="unbounded">
                <!-- Key constraint to ensure unique names for arguments -->
                <xs:key name="argumentItemName">

                    <!-- Selects child 'item' elements -->
                    <xs:selector xpath="item" />

                    <!-- Ensures 'name' attribute is unique -->
                    <xs:field xpath="@name" />
                </xs:key>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- Defines an array type with nested items -->
    <xs:complexType name="array" mixed="true">
        <xs:complexContent>
            <xs:extension base="argumentType">
                <xs:sequence>
                    <xs:element name="item" type="argumentType" minOccurs="0" maxOccurs="unbounded">
                        <!-- Key constraint for unique item names -->
                        <xs:key name="itemName">

                            <!-- Selects nested 'item' elements -->
                            <xs:selector xpath="item" />

                            <!-- Ensures 'name' attribute is unique -->
                            <xs:field xpath="@name" />
                        </xs:key>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Type for numeric arguments -->
    <xs:complexType name="number">
        <xs:complexContent>
            <!-- Inherits properties from argumentType -->
            <xs:extension base="argumentType" />
        </xs:complexContent>
    </xs:complexType>

    <!-- Type for boolean arguments -->
    <xs:complexType name="boolean">
        <xs:complexContent>
            <!-- Inherits properties from argumentType -->
            <xs:extension base="argumentType" />
        </xs:complexContent>
    </xs:complexType>

    <!-- Type for string arguments -->
    <xs:complexType name="string">
        <xs:complexContent>
            <!-- Inherits properties from argumentType -->
            <xs:extension base="argumentType" />
        </xs:complexContent>
    </xs:complexType>

    <!-- Root element for configuration -->
    <xs:element name="config">
        <xs:complexType>
            <xs:sequence>
                <!-- Defines exchange configurations -->
                <xs:element type="exchangeConfigType" name="exchange" maxOccurs="unbounded" minOccurs="0">
                    <!-- Unique constraint for binding IDs -->
                    <xs:unique name="unique-binding-id">
                        <xs:annotation>
                            <xs:documentation>Binding id must be unique</xs:documentation>
                        </xs:annotation>

                        <!-- Selects binding elements -->
                        <xs:selector xpath="binding" />

                        <!-- Ensures unique binding IDs -->
                        <xs:field xpath="@id" />
                    </xs:unique>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
        <!-- Unique constraint for exchange names and connections -->
        <xs:unique name="unique-exchange-name-connection">
            <xs:annotation>
                <xs:documentation>Exchange name must be unique</xs:documentation>
            </xs:annotation>

            <!-- Selects exchange elements -->
            <xs:selector xpath="exchange" />

            <!-- Ensures unique exchange names -->
            <xs:field xpath="@name" />

            <!-- Ensures unique connections -->
            <xs:field xpath="@connection" />
        </xs:unique>
    </xs:element>

    <!-- Defines binding type with optional attributes and nested arguments -->
    <xs:complexType name="bindingType" mixed="true">
        <xs:sequence>
            <!-- Nested arguments -->
            <xs:element type="argumentsType" name="arguments" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>

        <!-- Required binding ID -->
        <xs:attribute type="xs:string" name="id" use="required" />

        <!-- Optional destination type -->
        <xs:attribute type="destinationType" name="destinationType" use="optional" />

        <!-- Optional destination -->
        <xs:attribute type="xs:string" name="destination" use="optional" />

        <!-- Optional disabled flag -->
        <xs:attribute type="xs:boolean" name="disabled" use="optional" />

        <!-- Optional topic -->
        <xs:attribute type="xs:string" name="topic" use="optional" />
    </xs:complexType>

    <!-- Defines exchange configuration with attributes and nested elements -->
    <xs:complexType name="exchangeConfigType">
        <xs:choice maxOccurs="unbounded">
            <!-- Nested arguments -->
            <xs:element type="argumentsType" name="arguments" minOccurs="0" maxOccurs="unbounded" />

            <!-- Nested bindings -->
            <xs:element type="bindingType" name="binding" maxOccurs="unbounded" minOccurs="0" />
        </xs:choice>

        <!-- Required exchange name -->
        <xs:attribute type="xs:string" name="name" use="required" />

        <!-- Optional exchange type -->
        <xs:attribute type="exchangeType" name="type" use="optional" />

        <!-- Optional connection name -->
        <xs:attribute name="connection" type="xs:string" use="optional" />

        <!-- Optional durable flag -->
        <xs:attribute type="xs:boolean" name="durable" use="optional" />

        <!-- Optional auto-delete flag -->
        <xs:attribute type="xs:boolean" name="autoDelete" use="optional" />

        <!-- Optional internal flag -->
        <xs:attribute type="xs:boolean" name="internal" use="optional" />
    </xs:complexType>

    <!-- Simple type defining possible exchange types -->
    <xs:simpleType name="exchangeType">
        <xs:restriction base="xs:string">
            <!-- Original value from the base schema -->
            <xs:enumeration value="topic" />
            
            <!-- Adding new values -->
            <xs:enumeration value="direct" />
            <xs:enumeration value="fanout" />
            <xs:enumeration value="x-delayed-message" />
        </xs:restriction>
    </xs:simpleType>

    <!-- Simple type defining destination types -->
    <xs:simpleType name="destinationType">
        <xs:restriction base="xs:string">
            <!-- Queue destination type -->
            <xs:enumeration value="queue" />
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
